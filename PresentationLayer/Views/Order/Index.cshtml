@using BusinessLogicLayer.Viewmodels.OrderM
@using Newtonsoft.Json
@model OrderMVM

<div>
    <div style="padding: 10px;">
        <div class="main-top">
            <div class="input-search">
                <button id="myBtn">Tìm kiếm Sản phẩm</button>
            </div>
        </div>
        <div class="d-flex" style="width: 100%; gap: 10px;">
            <div style="width: 80%;">
                <h1>Danh sách sp đã chọn</h1>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th> Ảnh</th>
                            <th></th>                           
                            <th scope="col">Tên Sản Phẩm</th>
                            <th scope="col">Số Lượng</th>
                            <th scope="col">Đơn Giá</th>
                            <th scope="col">Tổng Tiền</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.SelectedProducts)
                        {
                            <tr>
                                <td><img src="@item.urlImg" alt="Alternate Text" / width="50px" height="50px"></td>
                                <td>
                                    <form asp-action="RemoveFromSelectedProducts" asp-route-id="@item.Id" method="post">
                                        <button type="submit" style="border: none; background:none;">
                                            <i class="fa-solid fa-trash"></i>
                                        </button>
                                    </form>
                                </td>
                                <td>@item.Name</td>
                                <td>
                                    <form asp-action="UpdateProductQuantity" method="post" id="quantity-form-@item.Id">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <input type="number" min="1" name="quantity" id="quantity-@item.Id" value="@item.Quantity" onchange="document.getElementById('quantity-form-@item.Id').submit();" />
                                    </form>
                                </td>
                                <td>@item.CostPrie</td>
                                <td id="total-@item.Id">@((item.CostPrie * item.Quantity))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <form asp-action="CreateOrder" asp-controller="Order">
                <div>
                    <table class="table">
                        <tbody>
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="checkbox" id="enableDelivery" onchange="toggleDeliveryForm()"> Giao hàng 
                            <div class="form-group">
                                <label class="control-label"> Tên khách hàng</label>
                                <input asp-for="@Model.CreateVM.CustomerName" class="form-control" />
                                <span asp-validation-for="@Model.CreateVM.CustomerName" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label  class="control-label"> Số điện thoại khách hàng</label>
                                <input asp-for="@Model.CreateVM.CustomerPhone" class="form-control" />
                                <span asp-validation-for="@Model.CreateVM.CustomerPhone" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label class=" control-label">Email khách hàng</label>
                                <input asp-for="@Model.CreateVM.CustomerEmail" class="form-control" />
                                <span asp-validation-for="@Model.CreateVM.CustomerEmail" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="deliveryFormGroup" style="display: none;">
                                <div class="css_select_div">
                                    <select class="css_select" id="tinh" name="tinh" title="Chọn Tỉnh Thành" onchange="updateShippingAddress()">
                                        <option value="0">Tỉnh Thành</option>
                                        <!-- Các option khác của Tỉnh -->
                                    </select>
                                    <select class="css_select" id="quan" name="quan" title="Chọn Quận Huyện" onchange="updateShippingAddress()">
                                        <option value="0">Quận Huyện</option>
                                        <!-- Các option khác của Quận -->
                                    </select>
                                    <select class="css_select" id="phuong" name="phuong" title="Chọn Phường Xã" onchange="updateShippingAddress()">
                                        <option value="0">Phường Xã</option>
                                        <!-- Các option khác của Phường -->
                                    </select>
                                </div>
                                <label class="control-label">Địa chỉ cụ thể</label>
                                <input type="text" id="diaChiCụThe" class="form-control" oninput="updateShippingAddress()" />

                                <label class="control-label">Địa chỉ giao</label>
                                <textarea asp-for="@Model.CreateVM.ShippingAddress" id="shippingAddress" class="form-control" readonly rows="3"></textarea>
                                <span asp-validation-for="@Model.CreateVM.ShippingAddress" class="text-danger"></span>
                                <div class="form-group">
                                    <label class="control-label">Phí vận chuyển</label>
                                    <input asp-for="CreateVM.Cotsts" id="shippingCost" class="form-control" oninput="updateTotal()" />
                                    <span asp-validation-for="CreateVM.Cotsts" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Mã giảm giá</label>
                                <input asp-for="@Model.CreateVM.VoucherCode" class="form-control" />
                                <span asp-validation-for="@Model.CreateVM.VoucherCode" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Ghi chú</label>
                                <input asp-for="@Model.CreateVM.Notes" class="form-control" />
                                <span asp-validation-for="@Model.CreateVM.Notes" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Phương thức thanh toán</label>
                                <select asp-for="@Model.CreateVM.PaymentMethods" id="paymentMethods" class="form-control" onchange="togglePaymentInputs()">
                                    <option value="TienMat">Tiền mặt</option>
                                    <option value="ChuyenKhoan">Chuyển khoản</option>
                                    <option value="Both">Cả hai</option>
                                </select>
                                <span asp-validation-for="@Model.CreateVM.PaymentMethods" class="text-danger"></span>
                            </div>
                            <div id="cashPayment" style="display: none;">
                                <div class="form-group">
                                    <label class="control-label">Số tiền trả (VNĐ)</label>
                                    <input type="number" id="cashAmount" class="form-control" onchange="updatePaidAmount()" />
                                </div>
                            </div>
                            <div id="bankTransferPayment" style="display: none;">
                                <div class="form-group">
                                    <label class="control-label">Số tiền chuyển khoản (VNĐ)</label>
                                    <input type="number" id="bankTransferAmount" class="form-control" onchange="updatePaidAmount()" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="form-group">
                                    <label class="control-label">Đã thanh toán</label>
                                    <span id="paidAmount">0.00</span>
                                </div>
                                <label class="control-label">Tổng tiền</label>
                                <input asp-for="@Model.CreateVM.TotalAmount" id="grandTotal" class="form-control" readonly />
                                <span asp-validation-for="@Model.CreateVM.TotalAmount" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input class ="primary" type="submit" value="Thanh Toán" class="btn btn-primary" />
                            </div>
                        </tbody>
                    </table>                    
                </div>
            </form>
        </div>
    </div>
    <div id="myModal" class="modal">
        <div class="modal-content">
            <div>
                <h4 style="font-size: 16px;">Tìm kiếm sản phẩm</h4>
                <span class="close">&times;</span>
            </div>
            <form id="searchForm" method="get" asp-action="SearchProduct" asp-controller="Order">
                <input width="50%" type="text" name="search" id="searchInput" placeholder="Nhập tên hoặc mã sản phẩm">
                <div style="display: flex; justify-content: space-between">
                    <label>
                        Màu sắc:
                        <select name="color" id="colorSelect">
                            <option value="">Tất cả</option>                           
                        </select>
                    </label>
                    <label>
                        Kích cỡ:
                        <select name="size" id="sizeSelect">
                            <option value="">Tất cả</option>
                        </select>
                    </label>
                </div>
            </form>
            <iframe name="searchFrame" id="searchFrame" style="display: none;"></iframe>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Ảnh</th>
                            <th scope="col">Mã</th>
                            <th scope="col">Tên</th>
                            <th scope="col">Màu sắc</th>
                            <th scope="col">Kích cỡ</th>
                            <th scope="col">Giá</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.lstproduct)
                        {
                            <tr>
                                <td><img src="@item.urlImg" width="50px" height="50px" /></td>
                                <td>@item.MaSp</td>
                                <td>@item.Name</td>
                                <td>@item.Corlor</td>
                                <td>@item.Size</td>
                                <td>@item.CostPrie</td>
                                <td><a href="@Url.Action("AddToSelectedProducts", new { id = item.Id })"><i class="bi bi-plus-circle"></i></a></td>
                            </tr>
                        }
                    </tbody>
                </table>
        </div>
    </div>
</div>
<script>
    var modal = document.getElementById("myModal");
    var btn = document.getElementById("myBtn");
    var span = document.getElementsByClassName("close")[0];
    function saveModalState() {
        var modalOpen = modal.style.display === "block";
        localStorage.setItem("modalOpen", modalOpen);
    }

    // Mở modal khi nhấn nút
    btn.onclick = function () {
        modal.style.display = "block";
        saveModalState();
    }

    // Đóng modal khi nhấn nút đóng
    span.onclick = function () {
        modal.style.display = "none";
        saveModalState();
    }

    // Đóng modal khi click bên ngoài modal
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
            saveModalState();
        }
    }

    // Khôi phục trạng thái của modal sau khi tải lại trang
    document.addEventListener("DOMContentLoaded", function () {
        var modalOpen = localStorage.getItem("modalOpen");
        if (modalOpen === "true") {
            modal.style.display = "block";
        } else {
            modal.style.display = "none";
        }
    });


    document.getElementById('searchForm').addEventListener('submit', function () {
        document.getElementById('searchFrame').style.display = 'block';
        modal.style.display = "none";
    });


    document.getElementById('searchFrame').onload = function () {
        document.getElementById('searchFrame').style.display = 'block';
    };

    function updateTotal(productId, costPrice) {
        var quantityElement = document.getElementById('quantity-' + productId);
        var totalElement = document.getElementById('total-' + productId);
        var quantity = parseInt(quantityElement.value);
        var total = quantity * parseFloat(costPrice);
        totalElement.innerText = total.toFixed(2); 
        updateGrandTotal(); 
    }
    function updateGrandTotal() {
        var grandTotal = 0;
    @if (Model.SelectedProducts != null)
    {
        foreach (var item in Model.SelectedProducts)
        {
            <text>
                                            var totalElement = document.getElementById('total-@item.Id');
                grandTotal += parseFloat(totalElement.innerText);
            </text>
        }
    }
            document.getElementById('grandTotal').innerText = grandTotal.toFixed(2);
    }
</script>
<link rel="stylesheet" href="~/css/order.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
      integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
      crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<script>
    function updateTotal(productId, costPrice) {
        var quantityElement = document.getElementById('quantity-' + productId);
        var totalElement = document.getElementById('total-' + productId);
        var quantity = parseInt(quantityElement.value);
        var total = quantity * parseFloat(costPrice);
        totalElement.innerText = total.toFixed(2); // Định dạng hiển thị số thập phân
        updateGrandTotal(); // Gọi hàm cập nhật tổng tiền chung
    }

    function updateGrandTotal() {
        var grandTotal = 0;
    @if (Model.SelectedProducts != null)
    {
        foreach (var item in Model.SelectedProducts)
        {
            <text>
                            var totalElement = document.getElementById('total-@item.Id');
                grandTotal += parseFloat(totalElement.innerText);
            </text>
        }
    }
            document.getElementById('grandTotal').innerText = grandTotal.toFixed(2);
    }
</script>
<script src="https://esgoo.net/scripts/jquery.js"></script>
<style type="text/css">
    .css_select_div {
        text-align: center;
    }

    .css_select {
        display: inline-table;
        width: 25%;
        padding: 5px;
        margin: 5px 2%;
        border: solid 1px #686868;
        border-radius: 5px;
    }
</style>
<script>
    $(document).ready(function () {
        //Lấy tỉnh thành
        $.getJSON('https://esgoo.net/api-tinhthanh/1/0.htm', function (data_tinh) {
            if (data_tinh.error == 0) {
                $.each(data_tinh.data, function (key_tinh, val_tinh) {
                    $("#tinh").append('<option value="' + val_tinh.id + '">' + val_tinh.full_name + '</option>');
                });
                $("#tinh").change(function (e) {
                    var idtinh = $(this).val();
                    //Lấy quận huyện
                    $.getJSON('https://esgoo.net/api-tinhthanh/2/' + idtinh + '.htm', function (data_quan) {
                        if (data_quan.error == 0) {
                            $("#quan").html('<option value="0">Quận Huyện</option>');
                            $("#phuong").html('<option value="0">Phường Xã</option>');
                            $.each(data_quan.data, function (key_quan, val_quan) {
                                $("#quan").append('<option value="' + val_quan.id + '">' + val_quan.full_name + '</option>');
                            });
                            //Lấy phường xã
                            $("#quan").change(function (e) {
                                var idquan = $(this).val();
                                $.getJSON('https://esgoo.net/api-tinhthanh/3/' + idquan + '.htm', function (data_phuong) {
                                    if (data_phuong.error == 0) {
                                        $("#phuong").html('<option value="0">Phường Xã</option>');
                                        $.each(data_phuong.data, function (key_phuong, val_phuong) {
                                            $("#phuong").append('<option value="' + val_phuong.id + '">' + val_phuong.full_name + '</option>');
                                        });
                                    }
                                });
                            });

                        }
                    });
                });

            }
        });
    });
</script>
<script>
    function updateShippingAddress() {
        var tinh = document.getElementById('tinh').options[document.getElementById('tinh').selectedIndex].text;
        var quan = document.getElementById('quan').options[document.getElementById('quan').selectedIndex].text;
        var phuong = document.getElementById('phuong').options[document.getElementById('phuong').selectedIndex].text;
        var diaChiCụThe = document.getElementById('diaChiCụThe').value;

        if (tinh === "Tỉnh Thành") tinh = "";
        if (quan === "Quận Huyện") quan = "";
        if (phuong === "Phường Xã") phuong = "";

        var shippingAddress = [tinh, quan, phuong, diaChiCụThe].filter(Boolean).join(" - ");
        document.getElementById('shippingAddress').value = shippingAddress;
    }
</script>
<script>
    function toggleDeliveryForm() {
        var checkbox = document.getElementById("enableDelivery");
        var deliveryFormGroup = document.getElementById("deliveryFormGroup");

        if (checkbox.checked) {
            deliveryFormGroup.style.display = "block";
        } else {
            deliveryFormGroup.style.display = "none";
        }
    }
</script>
<script>
    function updateTotal() {
        var total = 0;

        // Tính tổng tiền từ các sản phẩm đã chọn
        var rows = document.querySelectorAll("table.table-bordered tbody tr");
        rows.forEach(function (row) {
            var quantity = parseInt(row.querySelector("input[name^='quantity']").value);
            var unitPrice = parseFloat(row.querySelector("td:nth-child(5)").innerText);
            var subtotal = quantity * unitPrice;
            total += subtotal;
        });

        // Cộng thêm phí vận chuyển
        var shippingCost = parseFloat(document.getElementById("shippingCost").value) || 0;
        total += shippingCost;

        // Hiển thị tổng tiền đã tính được
        document.getElementById("grandTotal").value = total.toFixed(2);
    }

    function toggleDeliveryForm() {
        var deliveryFormGroup = document.getElementById("deliveryFormGroup");
        var enableDelivery = document.getElementById("enableDelivery").checked;

        if (enableDelivery) {
            deliveryFormGroup.style.display = "block";
        } else {
            deliveryFormGroup.style.display = "none";
            document.getElementById("shippingAddress").value = "";
            updateShippingAddress();
        }
    }

    

    // Tính toán tổng tiền ban đầu khi trang được tải
    window.onload = function () {
        updateTotal();
    };

    // Đóng modal khi nhấp vào nút đóng
    var closeButtons = document.querySelectorAll(".close");
    closeButtons.forEach(function (btn) {
        btn.addEventListener("click", function () {
            var modal = btn.closest(".modal");
            modal.style.display = "none";
        });
    });

    // Đóng modal khi nhấp vào bên ngoài nội dung modal
    window.onclick = function (event) {
        var modals = document.querySelectorAll(".modal");
        modals.forEach(function (modal) {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });
    };
</script>
<script>
    function togglePaymentInputs() {
        var paymentMethods = document.getElementById("paymentMethods");
        var selectedOption = paymentMethods.options[paymentMethods.selectedIndex].value;
        var cashPayment = document.getElementById("cashPayment");
        var bankTransferPayment = document.getElementById("bankTransferPayment");

        // Ẩn các phương thức thanh toán
        cashPayment.style.display = "none";
        bankTransferPayment.style.display = "none";

        // Hiển thị phương thức thanh toán tương ứng
        if (selectedOption === "TienMat" || selectedOption === "Both") {
            cashPayment.style.display = "block";
        }
        if (selectedOption === "ChuyenKhoan" || selectedOption === "Both") {
            bankTransferPayment.style.display = "block";
        }

        // Cập nhật số tiền đã thanh toán khi thay đổi phương thức
        updatePaidAmount();
    }

    function updatePaidAmount() {
        var cashAmount = parseFloat(document.getElementById("cashAmount").value) || 0;
        var bankTransferAmount = parseFloat(document.getElementById("bankTransferAmount").value) || 0;

        var totalAmount = parseFloat(document.getElementById("grandTotal").value) || 0;
        var paidAmount = cashAmount + bankTransferAmount;

        // Hiển thị số tiền đã thanh toán
        document.getElementById("paidAmount").textContent = paidAmount.toFixed(2);

        // Kiểm tra và hiển thị thông báo nếu số tiền thanh toán không đủ
        var paymentStatus = document.getElementById("paymentStatus");
        if (paidAmount >= totalAmount) {
            paymentStatus.textContent = "Đã đủ số tiền thanh toán.";
            document.getElementById("btnSubmit").disabled = false; // Cho phép thanh toán
        } else {
            var remainingAmount = totalAmount - paidAmount;
            paymentStatus.textContent = "Khách hàng còn thiếu số tiền: " + remainingAmount.toFixed(2);
            document.getElementById("btnSubmit").disabled = true; // Không cho phép thanh toán
        }
    }

    // Gọi hàm togglePaymentInputs khi tải trang để hiển thị các input ban đầu
    togglePaymentInputs();
</script>